name: Deploy

on:
  pull_request:
    branches:
      - developDRF
  push:

jobs:
  # build_and_push_to_docker_hub:
  #   name: Push Docker image
  #   runs-on: ubuntu-latest
  #   # if: github.ref == 'refs/heads/master'
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v3
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #     - name: Login to Docker
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #     - name: Push backend to Docker Hub
  #       uses: docker/build-push-action@v2
  #       with:
  #         push: true
  #         context: ./backend/
  #         tags: ${{ secrets.DOCKER_USERNAME }}/backend:latest
  #     - name: Push frontend to Docker Hub
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./frontend/
  #         push: true
  #         tags: ${{ secrets.DOCKER_USERNAME }}/frontend:latest
  #     - name: Push ml to Docker Hub
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./ml/
  #         push: true
  #         tags: ${{ secrets.DOCKER_USERNAME }}/ml:latest

  deploy:
    runs-on: ubuntu-latest
    # needs: build_and_push_to_docker_hub
    # if: github.ref == 'refs/heads/master'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker-compose stop
            sudo docker-compose rm ${{ secrets.DOCKER_USERNAME }}/backend
            sudo docker-compose rm ${{ secrets.DOCKER_USERNAME }}/frontend
            sudo docker-compose rm ${{ secrets.DOCKER_USERNAME }}/ml
            rm -f .env
            touch .env
            echo PRODUCT_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo DEBUG=${{ secrets.DEBUG }} >> .env
            echo DB_SQL=${{ secrets.DB_SQL }} >> .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker-compose up -d
            sudo docker-compose exec -T backend python manage.py migrate
            sudo docker-compose exec -T backend python manage.py collectstatic --no-input
